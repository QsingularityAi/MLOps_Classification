version: '3.8'

services:
  stroke-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../models:/app/models
    environment:
      - MODEL_PATH=models/stroke_prediction_model_20250318_122920.joblib
    networks:
      - monitoring-network
    restart: always

  model-monitor:
    build:
      context: ..
      dockerfile: docker/Dockerfile.monitor
    ports:
      - "8001:8001"
    volumes:
      - ../models:/app/models
      - ../data:/app/data
    environment:
      - MODEL_PATH=models/stroke_prediction_model_20250318_122920.joblib
      - REFERENCE_DATA_PATH=data/processed/reference_data.csv
      - TEST_DATA_PATH=data/processed/test_data.csv
      - CHECK_INTERVAL=300
    networks:
      - monitoring-network
    restart: always

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - monitoring-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ../grafana/provisioning:/etc/grafana/provisioning
      - ../grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - monitoring-network
    restart: always
    depends_on:
      - prometheus

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: